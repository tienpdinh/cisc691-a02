name: Tests and Coverage

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install coverage
        
    - name: Run tests with coverage
      run: |
        coverage run run_tests.py
        coverage xml
        coverage report
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}

    - name: Generate coverage badge (fallback)
      if: matrix.python-version == '3.9'
      run: |
        coverage json
        python -c "
        import json
        import re
        import os
        
        # Read coverage data
        with open('coverage.json') as f:
            data = json.load(f)
        
        coverage = int(data['totals']['percent_covered'])
        
        # Determine badge color
        if coverage >= 95:
            color = 'brightgreen'
        elif coverage >= 90:
            color = 'green'
        elif coverage >= 80:
            color = 'yellowgreen'
        elif coverage >= 70:
            color = 'yellow'
        elif coverage >= 60:
            color = 'orange'
        else:
            color = 'red'
        
        # Create badge URL
        badge_url = f'https://img.shields.io/badge/coverage-{coverage}%25-{color}'
        badge_markdown = f'![Coverage]({badge_url})'
        
        print(f'Coverage: {coverage}%')
        print(f'Badge: {badge_markdown}')
        
        # Update README if it exists
        if os.path.exists('README.md'):
            with open('README.md', 'r') as f:
                content = f.read()
            
            if '![Coverage]' in content:
                # Replace existing badge
                content = re.sub(r'!\[Coverage\]\([^)]+\)', badge_markdown, content)
                print('Updated existing coverage badge')
            else:
                # Add new badge after title
                lines = content.split('\n')
                if lines and lines[0].startswith('#'):
                    lines.insert(1, '')
                    lines.insert(2, badge_markdown)
                    lines.insert(3, '')
                else:
                    lines.insert(0, badge_markdown)
                    lines.insert(1, '')
                content = '\n'.join(lines)
                print('Added new coverage badge')
            
            with open('README.md', 'w') as f:
                f.write(content)
        "
    
    - name: Commit coverage badge
      if: matrix.python-version == '3.9' && github.event_name == 'push'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add README.md
        if ! git diff --staged --quiet; then
          git commit -m "Update coverage badge [skip ci]"
          git push
        fi